/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode dummy = new ListNode(0);  
        ListNode tail = dummy;            
        int carry = 0;                  

        // Traverse through both lists
        while (l1 != null || l2 != null || carry > 0) {
            int sum = carry;          

            // Add values from l1 and l2, if present
            if (l1 != null) {
                sum += l1.val;
                l1 = l1.next;
            }
            if (l2 != null) {
                sum += l2.val;
                l2 = l2.next;
            }
            carry=sum/10;
            int value = sum % 10;   

            tail.next = new ListNode(value); 
            tail = tail.next;          
        }

        return dummy.next;  
    }
}
